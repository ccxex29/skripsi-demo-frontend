name: CD

on:
  pull_request:
    branches:
      - master

  workflow_dispatch:

jobs:
  helpers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Release Name
        id: release-name
        run: echo "::set-output name=pkg-name::$(cat package.json | jq '.name')"
      - name: Get Release Description
        id: release-description
        run: echo "::set-output name=pkg-desc::$(cat package.json | jq '.description')"
      - name: Get Release Version
        id: release-version
        run: echo "::set-output name=pkg-ver::$(cat package.json | jq '.version')"
    outputs:
      pkg-name: ${{ steps.release-name.outputs.pkg-name }}
      pkg-desc: ${{ steps.release-description.outputs.pkg-desc }}
      pkg-ver: ${{ steps.release-version.outputs.pkg-ver }}

  build-linux:
    needs: helpers
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn install
      - name: Prepare Repo
        run: sudo dpkg --add-architecture i386 && sudo apt-get update
      - name: Build App for Linux
        run: yarn build --linux
      - name: Upload Linux AppImage Client
        uses: actions/upload-artifact@v2
        with:
          name: ${{ needs.helpers.outputs.pkg-name }}-${{ needs.helpers.outputs.pkg-ver }}-lin
          path: dist/${{ needs.helpers.outputs.pkg-desc }}-${{ needs.helpers.outputs.pkg-ver }}.AppImage

  build-macos:
    needs: helpers
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn install
      - name: Build App for macOS
        run: yarn build --mac
      - name: Upload macOS DMG Client
        uses: actions/upload-artifact@v2
        with:
          name: ${{ needs.helpers.outputs.pkg-name }}-${{ needs.helpers.outputs.pkg-ver }}-mac
          path: dist/${{ needs.helpers.outputs.pkg-desc }}-${{ needs.helpers.outputs.pkg-ver }}.dmg

  build-windows:
    needs: helpers
    runs-on: windows-2016
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: 16
      - name: Install Dependencies
        run: yarn install
      - name: Build App for Windows
        run: yarn build --win
      - name: Upload Windows EXE Client
        uses: actions/upload-artifact@v2
        with:
          name: ${{ needs.helpers.outputs.pkg-name }}-${{ needs.helpers.outputs.pkg-ver }}-win
          path: dist/${{ needs.helpers.outputs.pkg-desc }} ${{ needs.helpers.outputs.pkg-ver }}.exe

  release:
    needs: [helpers, build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Linux AppImage Client
        uses: action/download-artifact@v2
        with:
          name: ${{ needs.helpers.outputs.pkg-name }}-${{ needs.helpers.outputs.pkg-ver }}-lin
      - name: Download Windows EXE Client
        uses: action/download-artifact@v2
        with:
          name: ${{ needs.helpers.outputs.pkg-name }} ${{ needs.helpers.outputs.pkg-ver }}-win
      - name: Download macOS DMG Client
        uses: action/download-artifact@v2
        with:
          name: ${{ needs.helpers.outputs.pkg-name }}-${{ needs.helpers.outputs.pkg-ver }}-mac
      - name: Release Packages
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ needs.test-and-output.pkg-ver }}-${{ github.ref }}
          prerelease: true
          body: |
            ${{ needs.test-and-output.pkg-name }} auto built for ${{ github.ref }}
          files: |
            ${{ needs.test-and-output.outputs.pkg-desc }}-${{ needs.test-and-output.outputs.pkg-ver }}.AppImage
            ${{ needs.test-and-output.outputs.pkg-desc }} ${{ needs.test-and-output.outputs.pkg-ver }}.exe
            ${{ needs.test-and-output.outputs.pkg-desc }}-${{ needs.test-and-output.outputs.pkg-ver }}.dmg
